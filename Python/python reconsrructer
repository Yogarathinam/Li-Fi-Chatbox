import cv2
import numpy as np
import tkinter as tk
from tkinter import filedialog, Label, Button
from PIL import Image, ImageTk

def load_binary_file():
    file_path = filedialog.askopenfilename(filetypes=[("Text Files", "*.txt")])
    if file_path:
        reconstruct_image(file_path)

def reconstruct_image(file_path):
    with open(file_path, "r") as file:
        binary_data = file.readlines()

    # Convert binary text to NumPy array
    binary_matrix = np.array([[int(pixel) for pixel in row.strip()] for row in binary_data], dtype=np.uint8)

    # Convert 0s and 1s back to grayscale (White = 255, Black = 0)
    reconstructed_image = (1 - binary_matrix) * 255  # Inverting back

    # Show the reconstructed image
    img_pil = Image.fromarray(reconstructed_image)
    img_tk = ImageTk.PhotoImage(img_pil)

    image_label.config(image=img_tk)
    image_label.image = img_tk

    # Save the reconstructed image
    cv2.imwrite("reconstructed_image.png", reconstructed_image)

# Tkinter GUI Setup
root = tk.Tk()
root.title("Binary to Image Converter")

# Load Binary File Button
Button(root, text="Load Binary File", command=load_binary_file).pack(pady=10)

# Display Reconstructed Image
image_label = Label(root)
image_label.pack(pady=10)

# Run Tkinter Loop
root.mainloop()
